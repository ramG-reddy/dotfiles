[user]
	email = venkataramgopal16@gmail.com
	name = ramG-reddy
[push]
	autoSetupRemote = true # Automatically set upstream when pushing
[core]
	editor = code --wait # Use Visual Studio Code as the default editor
	autocrlf = false # Avoids the CRLF issue
[fetch]
	prune = true # Prune remote branches when fetching
[alias]
	co = checkout
	st = status
	br = branch
	cpk = cherry-pick
	wkt = worktree
	ac = !git add -A && git commit -m # Add all changes and commit with a message
	wipe = !git clean -df -i && git reset --hard # Reset the working directory and remove untracked files
	del = "!f() { git reset --hard HEAD~$1; }; f"
	undo = "!f() { git reset --soft HEAD~$1 && git restore --staged .; }; f"
	pr = "!f() { git fetch $1 pull/$2/head:pr-$2 && git checkout pr-$2; }; f"
	lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
	brc = "!branches=$(git branch --no-color | fzf --height=60% --layout=reverse --info=inline --border --margin=1 --padding=1 -m); echo \"Branches selected for deletion:\"; echo \"$branches\"; read -p \"Are you sure you want to delete these branches? (y/N): \" confirm; if [ \"$confirm\" = \"y\" ]; then echo \"$branches\" | xargs -I {} git branch -D '{}'; else echo \"Deletion canceled.\"; fi" # Delete multiple branches interactively
	purgefile = "!f() { git filter-branch --index-filter \"git rm -rf --cached --ignore-unmatch $1\" --prune-empty --tag-name-filter cat -- --all; }; f" # Remove a file from all commits in the history
[rebase]
	updateRefs = true
